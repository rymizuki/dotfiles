#
# ~/.zshrc
#

# =======================================================================
# prompt
# -----------------------------------------------------------------------

setopt prompt_subst
setopt prompt_cr

paren="()"
color="38;5;40"

if [[ -n "$LOGIN_SHELL" ]]; then
    paren="[]"
    color="38;5;219"
fi

if [[ $UID = 0 ]]; then
    color="38;5;183"
fi

PROMPT="%{[${color}m%}$paren[1]%n:%~$paren[2]%(!.#.$)%{[0m%} "

if [[ -n "$WINDOW" ]]; then
    preexec() {
        local cmd=${1[(wr)^(*=*|sudo|vi|lv|ssh|-*)]}
        echo -n "\ek$cmd\e\\"
    }

    precmd() {
        local cwd=`print -nP %~`
        echo -n "\ek$cwd:t/\e\\"
    }
fi

# - git branch on prompt
_set_env_git_current_branch() {
    GIT_CURRENT_BRANCH=$( git branch &> /dev/null | grep '^\*' | cut -b 3- )
}

_update_rprompt () {
    RPROMPT="[Git:$GIT_CURRENT_BRANCH]"
}

precmd()
{
    _set_env_git_current_branch
    _update_rprompt
}

chpwd()
{
    _set_env_git_current_branch
    _update_rprompt
}

# =======================================================================
# history
# -----------------------------------------------------------------------

setopt append_history
setopt extended_history
setopt hist_expand
setopt hist_ignore_all_dups
setopt hist_ignore_dups
setopt hist_ignore_space
setopt hist_no_store
setopt hist_reduce_blanks
setopt hist_save_no_dups
#setopt share_history

bindkey -e

HISTFILE=$HOME/.zsh_history
HISTSIZE=10000
SAVEHIST=100000
LISTMAX=1000

if [[ $UID = 0 ]]; then
    unset HISTFILE
    SAVEHIST=0
fi

autoload history-search-end
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end  history-search-end
bindkey "" history-beginning-search-backward-end
bindkey "" history-beginning-search-forward-end

function history-all { history -E 1 }

# =======================================================================
# completion
# -----------------------------------------------------------------------

setopt auto_list
setopt auto_menu
setopt auto_param_keys
setopt auto_param_slash
setopt extended_glob
setopt list_types
setopt list_packed
setopt mark_dirs
setopt hist_verify
setopt complete_aliases

autoload -Uz compinit
compinit -u

eval `dircolors`
zstyle ':completion:*:default' listo-colors ${LS_COLORS}
zstyle ':completion:*' use-cache true
zstyle ':completion:*:default:' menu select=1
zstyle ':completion:*:default:' menu select true
zstyle ':completion:*:cd:*' tag-order local-direcories path-directories
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'

# _cache_hosts=(`sed -ne 's/,.*//p' ~/.ssh/known_hosts`)



# =======================================================================
# cd, ls
# -----------------------------------------------------------------------

setopt auto_cd
setopt auto_pushd

# =======================================================================
# process
# -----------------------------------------------------------------------

setopt auto_resume
setopt magic_equal_subst

# =======================================================================
# keyboard
# -----------------------------------------------------------------------

setopt ignore_eof
setopt NO_flow_control
setopt NO_hup

if [[ -n "${SLEDGE_CONFIG_NAME}" ]]; then  
    source ~/.mf.zshrc
fi

function t() {
    tmux new-window "$*"
}

function workslog() {
    vi ~/worksLog/`date +%y`-`date +%m%d`.txt
}

# =======================================================================
# alias -- zhsrc
# -----------------------------------------------------------------------

# vi
alias vvim="vi ~/.vimrc"
alias vzsh="vi ~/.zshrc"
alias vtmux="vi ~/.tmux.conf"

# source
alias szsh="source ~/.zshrc"
alias svim="source ~/.vimrc"
alias stmux="source ~/.tmux.conf"

# screen
alias s="screen -U"

# tmux
alias tt="tmux -2 new-session"
alias tr="tmux attach-session"
alias tv="tmux new-window vim"

# commands
alias ls='ls --color=auto'
alias la='ls -la'
alias ll="ls -l"
#eval `dircolors -b ~/etc/dircolors.conf`

alias vi="vim"
alias datetime="perl -e 'print localtime . qq{\n}'"
alias pm="perldoc -m"

# ãƒ‘ã‚¤ãƒ—ç³»
alias -g L="| lv"
alias -g T="| tail"
alias -g H="| head"
alias -g G="| grep"
alias -g W="| wc"

# Git
alias -g gc="git checkout"
alias -g gb="git branch"


