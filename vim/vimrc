"
" -----VIMRC
"

"-------------------------------------------
" Vandle
"-------------------------------------------
filetype off

set rtp+=~/.vim/vundle.git/
call vundle#rc()

"-------------------------------------------
" 基本設定
"-------------------------------------------

"国際化
set encoding=utf-8
set fileencoding=utf-8
set fileencodings=utf-8,iso-2022-jp,euc-jp,cp932
set fileformats=unix,dos,mac
set ambiwidth=double

" syntax
syntax enable
"colorscheme delek
"colorscheme Light
colorscheme darkblue 

" filetype
filetype on
filetype indent on
au BufNewFile,BufRead *.zshrc   set filetype=zsh
au BufNewFile,BufRead *.psgi    set filetype=perl
au BufNewFile,BufRead *.t       set filetype=perl
au BufNewFile,BufRead *.scss    set filetype=scss
au BufNewFile,BufRead *.tx      set filetype=xslate


setlocal omnifunc=syntaxcomplete#Complete
autocmd FileType html set omnifunc=htmlcomplete#CompleteTags
autocmd FileType css  set omnifunc=csscomplete#CompleteCSS
autocmd FileType yaml set sw=2 ts=2

set ts=4
set shiftwidth=4
set expandtab
set smartindent
set autoindent
set ambiwidth=double
set showcmd
set showmode
set showmatch
set listchars=tab:>-,trail:-,nbsp:%,extends:>,precedes:<
set ruler
set nobackup
set hlsearch        " highlight
set virtualedit=block
set whichwrap=b,s,[,],<,>
set backspace=indent,eol,start

"コマンドライン補完を拡張モードへ
set wildmenu
set wildmode=list:full

"backup
set swapfile
set directory=~/.vimbackup
set backup
set backupdir=~/.vimbackup

" tab
set showtabline=2
set tabline=%!MyTabLine()
function MyTabLine()
    let s = ''
    for i in range(tabpagenr('$'))
        if i + 1 == tabpagenr()
            let s .= '%#TabLineSel#'
        else
            let s .= '%#TabLine#'
        endif
        let s .= '%' . (i+1) . 'T' 
        let s .= ' ' . (i+1) . (1==getwinvar(i+1,'&modified')?'[+]':'') . ' %{MyTabLabel(' . (i+1) . ')} '
    endfor
    let s .= '%#TabLineFill#%T'
    if tabpagenr('$') > 1 
        let s .= '%=%#TabLine#%999Xclose'
    endif
    return s
endfunction
function MyTabLabel(n)
    let buflist = tabpagebuflist(a:n)
    let winnr = tabpagewinnr(a:n)
    return bufname(buflist[winnr - 1]) 
endfunction

" git status
set laststatus=2 " ステータスラインを常に表示

let &statusline = ''
let &statusline .= '%<%f %h%m%r%w'
let &statusline .= '%='
let &statusline .= '[%{pathshorten(getcwd())}]'
let &statusline .= '%{exists("b:git_branch") &&  b:git_branch != "" ? "[Git:" . b:git_branch . "]" : ""}'  " Gitのブランチ名を表示
let &statusline .= '%y' 
let &statusline .= '[%{&l:fileencoding == "" ? &encoding : &l:fileencoding}]' 
let &statusline .= ' %-14.(%l,%c%V%) %P'

autocmd! BufEnter * let b:git_branch = GetGitBranchName()

function! GetGitBranchName()
    let dir = expand('%:p:h')
    let branch = ""
    let r = system('cd ' . dir . ' && git symbolic-ref HEAD 2> /dev/null')
    if r != ""
        let branch = split(r,"/")[-1][:-2]
    endif
    return branch
endfunction

" tabcolor
hi TabLine     term=reverse cterm=reverse ctermfg=white ctermbg=black
hi TabLineSel  term=bold cterm=bold,underline ctermfg=9
hi TabLineFill term=reverse cterm=reverse ctermfg=white ctermbg=black

" keymap
nmap <ESC><ESC> :nohl<CR>
inoremap { {}<LEFT>
inoremap [ []<LEFT>
inoremap ( ()<LEFT>
inoremap "" ""<LEFT>
inoremap '' ''<LEFT>
inoremap <> <><LEFT>
" perl TT
inoremap [% [%  %]<LEFT><LEFT><LEFT>
" perl TX::Syntax::Kolon
inoremap <: <:  :><LEFT><LEFT><LEFT>
" PHP
inoremap <?= <?= ?><LEFT><LEFT><LEFT>
inoremap <? <?  ?><LEFT><LEFT><LEFT>
" カーソル操作
inoremap <C-b> <LEFT>
inoremap <C-f> <RIGHT>

" tabmap
" GNU screen likeなキーバインド
nnoremap :tn   :tabnew .<CR>
nnoremap <C-p> :tabn<CR>
nnoremap <C-n> :tabp<CR>
nnoremap <C-l> :ls<CR>:buffer

"
" LoadPluginsConfig

if filereadable(expand('~/.vim/vundle.vim'))
    source ~/.vim/vundle.vim
endif

" NeoComplCache 
if filereadable(expand('~/.vim/neocomplcache.vim'))
    source ~/.vim/neocomplcache.vim
endif

" NeoSnippet
if filereadable(expand('~/.vim/neosnippet.vim'))
    source ~/.vim/neosnippet.vim
endif

" NERDTree
if filereadable(expand('~/.vim/nerdtree.vim'))
    source ~/.vim/nerdtree.vim
endif

" surround.vim
if filereadable(expand('~/.vim/surround.vim'))
    source ~/.vim/surround.vim
endif

" ZenCoding
if filereadable(expand('~/.vim/zencoding.vim'))
    source ~/.vim/zencoding.vim
endif
